吕泽
lvze@tedu.cn

3天网络编程
4.5天 进程线程
1.5 综合

4天MongoDB
1.2.5天 正则表达式
2.1.5天 项目
代码变长
截然不同


网络编程




网络目的：数据的传输
网络数据传输是一个复杂的过程
ISO：国际标准化组织
OSI：七层模型  --》 网络通信标准化流程


流式套接字(SOCK_STREAM) : 传输层基于tcp协议进行通信

数据报套接字(SOCK_DGRAM) : 传输层基于udp协议进行通信  这块没听！！


TCP套接字
***服务端
import socket
1.创建套接字
socket.socket(socket_family = AF_INET,
              socket_type = SOCK_STREAM,
              proto = 0)
函数三要素：功能 参数 返回值

功能：创建一个套接字
参数：socket_family 选择地址族类型 AF_INET表示IPv4
      socket――type选择套接字类型SOCK_STREAM 流式
                                  SOCK_DGRAM数据报
      proto          通常为0（表示子协议）
返回值：返回一个套接字对象

2.绑定IP端口
sockfd.bind()
功能：绑定IP和端口
参数：二元元组，第一项为ip、第二项为端口名
                e.g.('192.168.1.2',8888)

3。将套接字设置为可监听
sockfd.listen(n)
功能：将套接字设置为监听套接字，并设置监听队列
参数：监听对象的大小，  n为大于0的正整数

4.等待客户端的连接
connfd,addr = sockfd.accept()
功能：阻塞等待客户端连接
返回值：connfd 一个新的套接字，用于和指定客户端通信
        addr   连接的客户端的地址

*阻塞函数；程序运行到阻塞函数位置，如果某种预期条件没有达成则暂停继续运行，直到条件达成后再继续运行 sleep input accept 

5.消息的收发

data = connfd.recv(buffersize)
功能：接受消息
参数：每次最多接受的消息大小 bytes
返回值：返回接收到的内容            decode（）

n = connfd.send(data)
功能：发送消息
参数:要发送的内容  必须是 bytes格式 encode（）
返回值：实际发送的字节数


6.关闭套接字
close（）
功能：关闭套接字，tcp连接断开


* telnet ip port 表示连接tcp服务端 

***tcp客户端
1.创建套接字
socket（）
*通信的两端套接字类型相同

2.发起连接
connect()
功能：发起连接请求
参数：元组，服务器端的地址

3.发收消息（）
send  recv
*两端收发需要配合

4.关闭套接字（）
close（）




作业：
1.口述三个问题
2.将tcp服务端和客户端改写为可以循环收发的模式，
   当发送##时两端都退出
3.当客户端退出后，服务端可以继续等待连接其他客
  户端，进行操作


文件的操作 复习
类 对象    复习





